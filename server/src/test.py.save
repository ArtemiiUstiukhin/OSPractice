import json

static_path = 'testgroups.json'
groups = json.loads(open(static_path).read())
parid = 'PAR_GROUP_ID'
id = 'DEVICE_GROUP_ID'
i = 0
pid = {}
root = None
idfd = []
#count=0
#for g in groups:
#    count+=1
#    print("new g= ",g)
#    if count==10: break
print(len(groups))
count = 0
for g in groups:
 #   print(g)
    g.setdefault("children",[])
    i = len(pid)
    while i!=0:
        if pid[i][0]==g[parid]:
            index = pid.setdefault(i+1,[g[id],-1])
            pid[i+1]=[g[id],index[1]+1]
            break
        else:
            if pid.get(i+1)!=None:
                pid.pop(i+1)
            i = i-1
    #print("i= ",i)
    #print("pid = ",pid)
    #print("g = ",g)
    if i==0:
        pid[1]=[g[id],groups.index(g)]
    #    print("pid ",pid)
        continue
    j = i
    #if g[id]==516:
    #    break
    root = groups
    while i!=0:
    #    print("j = ",j)
    #    print("pid = ",pid)
    #    print("g = ",g)
    #    print("item in root = ",root[pid[j-i+1][1]])
        root = root[pid[j-i+1][1]]["children"]
        i = i-1
    #    print("root ",root)
    #    print("i = ",i)
    root.append(g)
    idfd.append(g[id])
count = 0
print(len(groups))
print(len(idfd))
idfd.sort()
for g in groups:
    if g[id]

with open("result.json", "w", encoding="utf-8") as file:
        json.dump(groups, file)

